---

- name: GA | Setup | Bootstrapping
  ansible.builtin.import_role:
    name: ansibleguy.linux_bootstrap
  vars:
    configure_firewall: false  # will be done explicitly
    configure_users: false
    configure_ssh: false  # could be done as opt-in in the future (?)
    # ssh_config:
    #   port: 22
    #   allow_root: false
    #   auth_pwd: true
    #   auth_pubkey: false  # ?
    #   msg: true

    configure_network: false
    configure_auto_update: true
    auto_update_config:
      time: 'Sun 00:00'
      auto_reboot: true
      auto_reboot_with_users: false
      auto_reboot_time: '02:00'
      exclusions: []
      exclude_kernel: false
      logging: true
      logging_verbose: true
  when: ga_bootstrap

# firewall management
- name: GA | Setup | GA Web/Core - Firewall
  ansible.GA | Setup | builtin.import_role:
    name: ansibleguy.infra_ufw
  vars:
    ufw_rules:
      GrowAutomationWeb:
        port: "{{ ga_web_port_http }},{{ ga_web_port_https }}"
        proto: 'tcp'
      GrowAutomationCore:
        port: "{{ ga_core_port_socket }}"
        proto: 'tcp'
        log: true
  when:
    - ga_ufw_manage
    - ga_web_install
    - ga_core_install

- name: GA | Setup | GA Web - Firewall
  ansible.builtin.import_role:
    name: ansibleguy.infra_ufw
  vars:
    ufw_rules:
      GrowAutomationWeb:
        port: "{{ ga_web_port_http }},{{ ga_web_port_https }}"
        proto: 'tcp'
  when:
    - ga_ufw_manage
    - ga_web_install
    - not ga_core_install

- name: GA | Setup | GA Core - Firewall
  ansible.builtin.import_role:
    name: ansibleguy.infra_ufw
  vars:
    ufw_rules:
      GrowAutomationCore:
        port: "{{ ga_core_port_socket }}"
        proto: 'tcp'
        log: true
  when:
    - ga_ufw_manage
    - ga_core_install
    - not ga_web_install
