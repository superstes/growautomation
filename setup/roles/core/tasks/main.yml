---

- name: GA | Core | Installing packages
  apt:
    name: "{{ ga_core_packages }}"
    state: present

- name: GA | Core | Setting system timezone
  timezone:
    name: "{{ ga_timezone }}"

- name: GA | Core | Adding service group
  group:
    name: "{{ ga_service_group }}"
    state: present

- name: GA | Core | Adding service user
  user:
    name: "{{ ga_core_service_user }}"
    shell: '/usr/sbin/nologin'
    home: "/home/{{ ga_core_service_user }}"
    groups: "{{ ga_service_group }}"
    append: yes

- name: GA | Core | Creating core directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ga_core_service_user }}"
    group: "{{ ga_service_group }}"
    mode: 0755
    recurse: yes
  with_items:
  - "{{ ga_core_path }}"
  - "{{ ga_core_path_log }}"
  - "{{ ga_core_path_venv }}"

- name: GA | Core | Checking if repo was already cloned
  stat:
    path: "{{ setup_clone_dir }}"
  register: tmp_clone_dir

- name: GA | Core | Cloning ga code
  git:
    repo: 'https://github.com/superstes/growautomation.git'
    dest: "{{ setup_clone_dir }}"
    depth: 1
    version: "{{ ga_version }}"
  when: not tmp_clone_dir.stat.exists

- name: GA | Core | Copying core-code
  shell: "cp -r {{ setup_clone_dir }}/code/core {{ ga_core_path }} &&
  chown -R {{ ga_core_service_user }}:{{ ga_service_group }} {{ ga_core_path }}/core &&
  chmod 775 -R {{ ga_core_path }}/core"

- name: GA | Core | Checking if random key file exists
  stat:
    path: "{{ ga_core_path }}/core/secret/random.key"
  register: random_key_file

- name: GA | Core | Generating random encryption key
  lineinfile:
    line: "{{ lookup('password', '/dev/null chars=ascii_letters,digits,punctuation length=50') }}"
    path: "{{ ga_core_path }}/core/secret/random.key"
    state: present
    create: yes
    mode: 0440
    owner: "{{ ga_core_service_user }}"
    group: "{{ ga_service_group }}"
  no_log: true
  when: not random_key_file.stat.exists

- name: GA | Core | Setting privileges for encryption key
  file:
    path: "{{ ga_core_path }}/core/secret/random.key"
    owner: "{{ ga_core_service_user }}"
    group: "{{ ga_service_group }}"
    mode: 0440

- name: GA | Core | Adding core config file
  template:
    src: 'templates/var/lib/ga/core/config/file/core.conf.j2'
    dest: "{{ ga_core_path }}/core/config/file/core.conf"
    mode: 0600
    owner: "{{ ga_core_service_user }}"
    group: "{{ ga_service_group }}"

- name: GA | Core | Install python virtualenv
  pip:
    name: 'virtualenv'
    executable: pip3
    state: present

- name: GA | Core | Install python modules into venv
  pip:
    name: "{{ ga_core_mods }}"
    virtualenv: "{{ ga_core_path_venv }}"
    virtualenv_python: "{{ ga_python_version }}"
    state: present

- name: GA | Core | Adding core service file
  template:
    src: 'templates/lib/systemd/system/ga_core.service.j2'
    dest: '/lib/systemd/system/ga_core.service'

- name: GA | Core | Configuring update prerequisits
  import_tasks: update.yml

- name: GA | Core | Reloading systemd
  systemd:
    daemon_reload: yes

- name: GA | Core | Enabling service
  systemd:
    name: 'ga_core.service'
    enabled: yes
  notify: 'start_core_service'

- name: GA | Configure device support
  import_role:
    name: devices
  when: ga_core_device_support
