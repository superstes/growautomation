---

# pull last version if neither commit nor release got supplied => not possible via form; but who knows..

- name: GA | Update | Prep | Getting available releases
  ansible.builtin.uri:
    url: 'https://api.github.com/repos/superstes/growautomation/tags'
  register: ga_release_list
  delegate_to: localhost
  changed_when: false
  when:
    - ga_update_method == 'online'
    - ga_update_release is undefined or ga_update_release == 'None'
    - ga_update_type != 'commit'

- name: GA | Update | Prep | Getting last release version
  ansible.builtin.set_fact:
    ga_update_release_now: "{{ ga_release_list.json | json_query('[*].name') | first }}"
  changed_when: false
  when:
    - ga_update_method == 'online'
    - ga_update_release is undefined or ga_update_release == 'None'
    - ga_update_type != 'commit'

- name: GA | Update | Prep | Getting commit-id of last release version
  ansible.builtin.set_fact:
    ga_update_commit_now: "{{ ga_release_list.json | json_query('[*].commit.sha') | first }}"
  changed_when: false
  when:
    - ga_update_method == 'online'
    - ga_update_type != 'commit'
    - ga_update_commit is undefined or ga_update_commit == 'None'

# validating repo

- name: GA | Update | Prep | Setting release version
  ansible.builtin.set_fact:
    ga_update_release_now: "{{ ga_update_release }}"
  when:
    - ga_update_release is defined
    - ga_update_release != 'None'
    - ga_update_type != 'commit'

- name: GA | Update | Prep | Setting release version
  ansible.builtin.set_fact:
    ga_update_commit_now: "{{ ga_update_commit }}"
  when:
    - ga_update_commit is defined
    - ga_update_commit != 'None'
    - ga_update_type == 'commit'

- name: GA | Update | Prep | Checking if repository exists
  ansible.builtin.stat:
    path: "{{ ga_update_path_repo }}"
  changed_when: false
  register: local_repo

- name: GA | Update | Prep | Checking if repository is valid
  ansible.builtin.shell: "git ls-remote {{ ga_update_path_repo }} 2&> /dev/null; echo $?"
  register: repo_exists
  changed_when: false
  when:
   - local_repo.stat.exists
   - local_repo.stat.isdir

- name: GA | Update | Prep | Invalid offline repository
  ansible.builtin.fail:
    msg: "The provided local repository '{{ ga_update_path_repo }}' could not be verified successfully!
    Please download the repository from a remote pc via 'git clone https://github.com/superstes/growautomation.git' and copy it to the local disk!
    Or try using the online-update functionality."
  when: >
    not local_repo.stat.exists or
    not local_repo.stat.isdir or
    repo_exists.stdout != '0'

# setting repo to target version

- name: GA | Update | Prep | Setting repo to target release
  ansible.builtin.shell: "cd {{ ga_update_path_repo }} && git reset --hard {{ ga_update_release_now }}"
  when: ga_update_type != 'commit'

- name: GA | Update | Prep | Setting repo to target commit
  ansible.builtin.shell: "cd {{ ga_update_path_repo }} && git reset --hard {{ ga_update_commit_now }}"
  when: ga_update_type == 'commit'

- name: GA | Update | Prep | Getting release of commit
  ansible.builtin.shell: "cd {{ ga_update_path_repo }} && git describe --tags | cut -d '-' -f1"
  register: ga_raw_commit_release
  changed_when: false
  when: ga_update_type == 'commit'

# get 'parent'-release of commit if commit is used as a target version

- name: GA | Update | Prep | Setting release version
  ansible.builtin.set_fact:
    ga_update_release_now: "{{ ga_raw_commit_release.stdout }}"
  changed_when: false
  when: ga_update_type == 'commit'

- name: GA | Update | Prep | Getting core-count to use for tasks
  ansible.builtin.set_fact:
    ga_update_cores: "{{ ansible_processor_cores - 1 }}"
  changed_when: false
