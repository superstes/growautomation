---

- name: Installing GrowAutomation
  hosts: all
  become: true
  vars_files:
    - './vars/main.yml'
    - './vars/hardcoded.yml'
  tasks:
    # pre tasks
    - name: GA | Setup | Installing script dependencies
      ansible.builtin.apt:
        name: "{{ ga_script_packages }}"
        state: present

    - name: GA | Setup | Checking if password file exists
      ansible.builtin.stat:
        path: "{{ ga_random_pwd_file }}"
      register: random_pwd_file

    - name: GA | Setup | Generating passwords
      ansible.builtin.import_role:
        name: setup
        tasks_from: 'write_pwds.yml'
      when: not random_pwd_file.stat.exists

    - name: GA | Setup | Pulling existing passwords
      ansible.builtin.import_role:
        name: setup
        tasks_from: 'read_pwds.yml'
      when: random_pwd_file.stat.exists

    - name: GA | Setup | Getting version
      ansible.builtin.import_role:
        name: setup
        tasks_from: 'get_version.yml'

    # installation
    - name: GA | Setup | GA Core
      ansible.builtin.import_role:
        name: core
      when: ga_core_install

    - name: GA | Setup | GA Web - Pre tasks
      ansible.builtin.import_role:
        name: web
      when: ga_web_install

    # database setup
    - name: GA | Setup | Database setup tasks
      ansible.builtin.import_role:
        name: setup
        tasks_from: 'setup_database.yml'

    - name: GA | Setup | Starting core service
      ansible.builtin.systemd:
        name: "{{ ga_core_service }}"
        state: started

    # basic system setup
    - name: GA | Setup | System setup tasks
      ansible.builtin.import_role:
        name: setup
        tasks_from: 'setup_system.yml'

    # cleanup
    - name: GA | Setup | Cleaning up temporary password files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ ga_tmp_pwd_file_sql_core }}"
        - "{{ ga_tmp_pwd_file_sql_web }}"
        - "{{ ga_tmp_pwd_file_django_user }}"
        - "{{ ga_tmp_pwd_file_django_guest }}"
