---

- name: Installing GrowAutomation
  hosts: all
  become: true
  vars_files:
    - './vars/main.yml'
    - './vars/hardcoded.yml'
  tasks:
    - name: Checking if password file exists
      ansible.builtin.stat:
        path: "{{ ga_random_pwd_file }}"
      register: random_pwd_file

    - name: Generating passwords
      block:
        - name: Writing web-user heading to file
          ansible.builtin.lineinfile:
            line: "# database-users:"
            path: "{{ ga_random_pwd_file }}"
            state: present

        - name: Writing sql-core password to file
          ansible.builtin.lineinfile:
            line: "{{ ga_sql_user_core }}={{ ga_sql_pwd_core }}"
            path: "{{ ga_random_pwd_file }}"
            insertafter: #\database-users:"
            create: yes
            state: present
            mode: 0600
          no_log: true

        - name: Writing sql-web password to file
          ansible.builtin.lineinfile:
            line: "{{ ga_sql_user_web }}={{ ga_sql_pwd_web }}"
            path: "{{ ga_random_pwd_file }}"
            insertafter: #\database-users:"
            state: present
          no_log: true

        - name: Writing web-user heading to file
          ansible.builtin.lineinfile:
            line: "# web-users:"
            path: "{{ ga_random_pwd_file }}"
            state: present

        - name: Writing web-admin password to file
          ansible.builtin.lineinfile:
            line: "admin={{ ga_sql_pwd_web }}"
            path: "{{ ga_random_pwd_file }}"
            state: present
            insertafter: #\sweb-users:"
          no_log: true

        - name: Writing web-user passwords to file
          ansible.builtin.lineinfile:
            line: "{{ item.name }}={{ item.pwd }}"
            path: "{{ ga_random_pwd_file }}"
            state: present
            insertafter: #\sweb-users:"
          no_log: true
          with_items: "{{ ga_web_users }}"

      when: not random_pwd_file.stat.exists

    - name: Pulling existing passwords
      block:
        - name: Getting sql-core password
          ansible.builtin.shell: "cat {{ ga_random_pwd_file | quote }} | grep {{ ga_sql_user_core | quote }}"
          register: raw_core_pwd
          when: ga_sql_pwd_core == ga_sql_pwd_random_key
          no_log: true
          changed_when: False

        - name: Setting sql-core password
          ansible.builtin.set_fact:
            ga_sql_pwd_core: "{{ raw_core_pwd.stdout.split('=', 1)[1] }}"
          no_log: true
          when: ga_sql_pwd_core == ga_sql_pwd_random_key

        - name: Getting sql-web password
          ansible.builtin.shell: "cat {{ ga_random_pwd_file | quote }} | grep {{ ga_sql_user_web | quote }}"
          register: raw_web_pwd
          when: ga_sql_pwd_web == ga_sql_pwd_random_key
          no_log: true
          changed_when: False

        - name: Setting sql-web password
          ansible.builtin.set_fact:
            ga_sql_pwd_web: "{{ raw_web_pwd.stdout.split('=', 1)[1] }}"
          no_log: true
          when: ga_sql_pwd_web == ga_sql_pwd_random_key

        # we must not pull the web-users passwords since they will not be overwritten

      when: random_pwd_file.stat.exists

    - name: Database
      ansible.builtin.import_role:
        name: db
      when:
        - ga_sql_server == 'localhost'
        - ga_core_install or ga_web_install
        - ga_sql_install

    - name: GA Core
      ansible.builtin.import_role:
        name: core
      when: ga_core_install

    - name: GA Web
      ansible.builtin.import_role:
        name: web
      when: ga_web_install
